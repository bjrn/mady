exports[`compileTranslations should allow minification 1`] = `"function anonymous(){return{keyId3:function(n){return\"Hello \"+n.NAME+\"!\"},keyId4:function(n){return\"¡Adiós, \"+n.NAME+\"!\"},keyId1:function(n){return\"¡Hola!\"}}}module.exports=anonymous();"`;

exports[`compileTranslations should compile a key with plural selection 1`] = `
"/* eslint-disable */
function anonymous() {
var pluralFuncs = {
  es: function (n, ord) {
    if (ord) return \'other\';
    return (n == 1) ? \'one\' : \'other\';
  }
};
var fmt = {};
var number = function (value, offset) {
  if (isNaN(value)) throw new Error(\"\'\" + value + \"\' isn\'t a number.\");
  return value - (offset || 0);
};
var plural = function (value, offset, lcfunc, data, isOrdinal) {
  if ({}.hasOwnProperty.call(data, value)) return data[value]();
  if (offset) value -= offset;
  var key = lcfunc(value, isOrdinal);
  if (key in data) return data[key]();
  return data.other();
};
var select = function (value, data) {
  if ({}.hasOwnProperty.call(data, value)) return data[value]();
  return data.other()
};

return {
  ID: function(d) { return plural(d.NUM, 0, pluralFuncs.es, { one: function() { return \"1 hamburguesa\";}, other: function() { return number(d.NUM) + \" hamburguesas\";} }); }
}
};
module.exports = anonymous();
/* eslint-enable */
"
`;

exports[`compileTranslations should include all keys for which a translation is available 1`] = `
"/* eslint-disable */
function anonymous() {
var pluralFuncs = {
  es: function (n, ord) {
    if (ord) return \'other\';
    return (n == 1) ? \'one\' : \'other\';
  }
};
var fmt = {};
var number = function (value, offset) {
  if (isNaN(value)) throw new Error(\"\'\" + value + \"\' isn\'t a number.\");
  return value - (offset || 0);
};
var plural = function (value, offset, lcfunc, data, isOrdinal) {
  if ({}.hasOwnProperty.call(data, value)) return data[value]();
  if (offset) value -= offset;
  var key = lcfunc(value, isOrdinal);
  if (key in data) return data[key]();
  return data.other();
};
var select = function (value, data) {
  if ({}.hasOwnProperty.call(data, value)) return data[value]();
  return data.other()
};

return {
  keyId1: function(d) { return \"¡Hola!\"; },
  keyId4: function(d) { return \"¡Adiós, \" + d.NAME + \"!\"; }
}
};
module.exports = anonymous();
/* eslint-enable */
"
`;

exports[`compileTranslations should include keys with braces, even if no translation is available 1`] = `
"/* eslint-disable */
function anonymous() {
var pluralFuncs = {
  es: function (n, ord) {
    if (ord) return \'other\';
    return (n == 1) ? \'one\' : \'other\';
  }
};
var fmt = {};
var number = function (value, offset) {
  if (isNaN(value)) throw new Error(\"\'\" + value + \"\' isn\'t a number.\");
  return value - (offset || 0);
};
var plural = function (value, offset, lcfunc, data, isOrdinal) {
  if ({}.hasOwnProperty.call(data, value)) return data[value]();
  if (offset) value -= offset;
  var key = lcfunc(value, isOrdinal);
  if (key in data) return data[key]();
  return data.other();
};
var select = function (value, data) {
  if ({}.hasOwnProperty.call(data, value)) return data[value]();
  return data.other()
};

return {
  keyId3: function(d) { return \"Hello \" + d.NAME + \"!\"; },
  keyId4: function(d) { return \"¡Adiós, \" + d.NAME + \"!\"; },
  keyId1: function(d) { return \"¡Hola!\"; }
}
};
module.exports = anonymous();
/* eslint-enable */
"
`;
